# Idle and lock configuration
#
# This will lock your screen after 300 seconds of inactivity and dim 30 seconds before, then turn off
# your displays after another 60 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# The timeouts can be customized via `$dim_timeout`, `$lock_timeout` and `$screen_timeout`
# variables. For a predictable behavior, keep the `$screen_timeout` value
# and `$dim_timeout` value lesser than the `$lock_timeout`.
#
# You can also lock the screen manually by running `loginctl lock-session` or
# add a binding for the command. Example:
#     bindsym $mod+Shift+Escape  exec loginctl lock-session
#
# Requires: swayidle
# Requires: swaylock-effects
# Requires: /usr/bin/pkill, /usr/bin/pgrep

bindsym $mod+Control+l exec loginctl lock-session

exec_always DT="$dim_timeout" LT="$lock_timeout" ST="$screen_timeout" DT=${DT:-30} LT=${LT:-300} ST=${ST:-60} && \
    swayidle -w \
        timeout $((LT - DT)) 'brightnessctl -s && brightnessctl set 30%' \
                resume 'brightnessctl -r' \
        timeout $LT 'swaylock-effects -f' \
        timeout $((LT + ST)) 'swaymsg "output * power off"' \
                resume 'swaymsg "output * power on"'  \
        timeout $ST 'pgrep -xu "$USER" swaylock-effects >/dev/null && swaymsg "output * power off"' \
                resume 'pgrep -xu "$USER" swaylock-effects >/dev/null && swaymsg "output * power on"'  \
        before-sleep 'swaylock-effects -f' \
        lock 'swaylock-effects -f' \
        unlock 'pkill -xu "$USER" -SIGUSR1 swaylock-effects'
